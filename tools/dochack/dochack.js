/* Generated by the Nim Compiler v1.0.9 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI160074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3662 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI162577 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI43448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI43227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI43565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI43563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI43561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI43231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI45305 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3650 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3658 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI21156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3714 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3708 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3626 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3628 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3646 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3646 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3646.node = NNI3646;
var NNI3642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3642.node = NNI3642;
var NNI3628 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3628.node = NNI3628;
NTI3708.base = NTI3626;
NTI3714.base = NTI3626;
var NNI3626 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3708, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3714, name: "up", sons: null}]};
NTI3626.node = NNI3626;
var NNI3608 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3608.node = NNI3608;
NTI3626.base = NTI3608;
NTI3628.base = NTI3626;
NTI3642.base = NTI3628;
NTI3646.base = NTI3642;
var NNI21156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI21156.node = NNI21156;
var NNI3658 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3658.node = NNI3658;
NTI3658.base = NTI3628;
var NNI3650 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3650.node = NNI3650;
NTI3650.base = NTI3628;
NTI43561.base = NTI43229;
NTI43563.base = NTI43229;
NTI43565.base = NTI43229;
var NNI43227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI43227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI43227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI43227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI43227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI43227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI43227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI43227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI43227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI43227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI43227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI43227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI43227, name: "NotationNode", len: 0, sons: null}}};
NTI43227.node = NNI43227;
var NNI43283 = {kind: 2, len: 92, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI140, name: "opacity", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI140, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI140, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI43283.node = NNI43283;
NTI43283.base = NTI3608;
NTI43281.base = NTI43283;
var NNI43231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI43561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI43563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI43565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI43229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI43229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI43229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI43227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI43229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI43229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI43281, name: "style", sons: null}]};
NTI43231.node = NNI43231;
var NNI43205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI43372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI43376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI43380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI43384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI43388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI43392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI43396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI43400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI43404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI43408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI43412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI43416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI43420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI43424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI43428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI43432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI43436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI43440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI43444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI43448, name: "onunload", sons: null}]};
NTI43205.node = NNI43205;
NTI43205.base = NTI3608;
NTI43231.base = NTI43205;
NTI43229.base = NTI43231;
NTI45305.base = NTI43229;
NTI162577.base = NTI140;
var NNI3662 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3662.node = NNI3662;
NTI3662.base = NTI3628;
var NNI160074 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI130, name: "Field1", sons: null}]};
NTI160074.node = NNI160074;

function makeNimstrLit(c_23270) {
		  var ln = c_23270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_23270.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_24827, src_24828, ti_24829) {
	var result_25019 = null;

		switch (ti_24829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_24801(ti_24829))) {
			result_25019 = src_24828;
			}
			else {
				result_25019 = [src_24828[0], src_24828[1]];
			}
			
			break;
		case 19:
			      if (dest_24827 === null || dest_24827 === undefined) {
        dest_24827 = {};
      }
      else {
        for (var key in dest_24827) { delete dest_24827[key]; }
      }
      for (var key in src_24828) { dest_24827[key] = src_24828[key]; }
      result_25019 = dest_24827;
    
			break;
		case 18:
		case 17:
			if (!((ti_24829.base == null))) {
			result_25019 = nimCopy(dest_24827, src_24828, ti_24829.base);
			}
			else {
			if ((ti_24829.kind == 17)) {
			result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {m_type: ti_24829} : dest_24827;
			}
			else {
				result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {} : dest_24827;
			}
			}
			nimCopyAux(result_25019, src_24828, ti_24829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_24828 === null) {
        result_25019 = null;
      }
      else {
        if (dest_24827 === null || dest_24827 === undefined) {
          dest_24827 = new Array(src_24828.length);
        }
        else {
          dest_24827.length = src_24828.length;
        }
        result_25019 = dest_24827;
        for (var i = 0; i < src_24828.length; ++i) {
          result_25019[i] = nimCopy(result_25019[i], src_24828[i], ti_24829.base);
        }
      }
    
			break;
		case 28:
			      if (src_24828 !== null) {
        result_25019 = src_24828.slice(0);
      }
    
			break;
		default: 
			result_25019 = src_24828;
			break;
		}

	return result_25019;

}

function arrayConstr(len_25086, value_25087, typ_25088) {
		    var result = new Array(len_25086);
    for (var i = 0; i < len_25086; ++i) result[i] = nimCopy(null, value_25087, typ_25088);
    return result;
  

	
}

function cstrToNimstr(c_23287) {
		  var ln = c_23287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_23287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_23287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_23304) {
										var Tmp5;
						var Tmp7;

	var result_23305 = null;

		var res_23363 = new_seq_23336((s_23304 != null ? s_23304.length : 0));
		var i_23365 = 0;
		var j_23367 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_23365 < (s_23304 != null ? s_23304.length : 0))) break L2;
					var c_23368 = s_23304[i_23365];
					if ((c_23368 < 128)) {
					res_23363[j_23367] = String.fromCharCode(c_23368);
					i_23365 += 1;
					}
					else {
						var helper_23391 = new_seq_23336(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_23392 = c_23368.toString(16);
									if (((code_23392 != null ? code_23392.length : 0) == 1)) {
									if (helper_23391 != null) { helper_23391.push("%0"); } else { helper_23391 = ["%0"]; };
									}
									else {
									if (helper_23391 != null) { helper_23391.push("%"); } else { helper_23391 = ["%"]; };
									}
									
									if (helper_23391 != null) { helper_23391.push(code_23392); } else { helper_23391 = [code_23392]; };
									i_23365 += 1;
										if (((s_23304 != null ? s_23304.length : 0) <= i_23365)) Tmp5 = true; else {											Tmp5 = (s_23304[i_23365] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_23368 = s_23304[i_23365];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_23363[j_23367] = decodeURIComponent(helper_23391.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_23363[j_23367] = helper_23391.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_23367 += 1;
				}
		} while(false);
		if (res_23363 === null) res_23363 = [];
               if (res_23363.length < j_23367) { for (var i=res_23363.length;i<j_23367;++i) res_23363.push(null); }
               else { res_23363.length = j_23367; };
		result_23305 = res_23363.join("");

	return result_23305;

}

function raiseException(e_21618, ename_21619) {
		e_21618.name = ename_21619;
		if ((excHandler == 0)) {
		unhandledException(e_21618);
		}
		
		e_21618.trace = nimCopy(null, raw_write_stack_trace_21468(), NTI138);
		throw e_21618;

	
}

function addInt(a_23803, b_23804) {
		    var result = a_23803 + b_23804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_25105, a_25106, b_25107) {
			var Tmp1;

	var result_25108 = 0;

	BeforeRet: do {
			if (!(a_25106 <= i_25105)) Tmp1 = false; else {				Tmp1 = (i_25105 <= b_25107);			}		if (Tmp1) {
		result_25108 = i_25105;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_25105, a_25106, b_25107);
		}
		
	} while (false);

	return result_25108;

}

function subInt(a_23821, b_23822) {
		    var result = a_23821 - b_23822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet2 = setConstr([65, 90]);

function chckRange(i_25124, a_25125, b_25126) {
			var Tmp1;

	var result_25127 = 0;

	BeforeRet: do {
			if (!(a_25125 <= i_25124)) Tmp1 = false; else {				Tmp1 = (i_25124 <= b_25126);			}		if (Tmp1) {
		result_25127 = i_25124;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_25127;

}
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_23839, b_23840) {
		    var result = a_23839 * b_23840;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);

function nimMax(a_24221, b_24222) {
		var Tmp1;

	var result_24223 = 0;

	BeforeRet: do {
		if ((b_24222 <= a_24221)) {
		Tmp1 = a_24221;
		}
		else {
		Tmp1 = b_24222;
		}
		
		result_24223 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24223;

}

function nimMin(a_24203, b_24204) {
		var Tmp1;

	var result_24205 = 0;

	BeforeRet: do {
		if ((a_24203 <= b_24204)) {
		Tmp1 = a_24203;
		}
		else {
		Tmp1 = b_24204;
		}
		
		result_24205 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24205;

}
var nim_program_result = 0;
var global_raise_hook_18618 = [null];
var local_raise_hook_18623 = [null];
var out_of_mem_hook_18626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var alternative_162319 = [null];

function is_fat_pointer_24801(ti_24803) {
	var result_24804 = false;

	BeforeRet: do {
		result_24804 = !((ConstSet1[ti_24803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_24804;

}

function nimCopyAux(dest_24832, src_24833, n_24835) {
		switch (n_24835.kind) {
		case 0:
			break;
		case 1:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_24835.sons.length; i++) {
      nimCopyAux(dest_24832, src_24833, n_24835.sons[i]);
    }
    
			break;
		case 3:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
      for (var i = 0; i < n_24835.sons.length; ++i) {
        nimCopyAux(dest_24832, src_24833, n_24835.sons[i][1]);
      }
    
			break;
		}

	
}

function add_18638(x_18641, x_18641_Idx, y_18642) {
		      if (x_18641[x_18641_Idx] === null) { x_18641[x_18641_Idx] = []; }
      var off = x_18641[x_18641_Idx].length;
      x_18641[x_18641_Idx].length += y_18642.length;
      for (var i = 0; i < y_18642.length; ++i) {
        x_18641[x_18641_Idx][off+i] = y_18642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_21151(f_21153) {
					var Tmp3;

	var result_21154 = [null];

		var it_21162 = f_21153;
		var i_21164 = 0;
		var total_21166 = 0;
		var temp_frames_21173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI21156);
		L1: do {
				L2: while (true) {
					if (!!((it_21162 == null))) Tmp3 = false; else {						Tmp3 = (i_21164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_21173[i_21164].Field0 = it_21162.procname;
					temp_frames_21173[i_21164].Field1 = it_21162.line;
					i_21164 += 1;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_21162 == null))) break L5;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		result_21154[0] = nimCopy(null, [], NTI138);
		if (!((total_21166 == i_21164))) {
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("(")); } else { result_21154[0] = makeNimstrLit("("); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr(((total_21166 - i_21164))+"")); } else { result_21154[0] = cstrToNimstr(((total_21166 - i_21164))+"").slice(); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_21154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_21421 = 0;
			var colontmp__162466 = 0;
			colontmp__162466 = (i_21164 - 1);
			var res_162471 = colontmp__162466;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_162471)) break L8;
						j_21421 = res_162471;
						add_18638(result_21154, 0, temp_frames_21173[j_21421].Field0);
						if ((0 < temp_frames_21173[j_21421].Field1)) {
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(", line: ")); } else { result_21154[0] = makeNimstrLit(", line: "); };
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr((temp_frames_21173[j_21421].Field1)+"")); } else { result_21154[0] = cstrToNimstr((temp_frames_21173[j_21421].Field1)+"").slice(); };
						}
						
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("\x0A")); } else { result_21154[0] = makeNimstrLit("\x0A"); };
						res_162471 -= 1;
					}
			} while(false);
		} while(false);

	return result_21154[0];

}

function raw_write_stack_trace_21468() {
	var result_21470 = null;

		if (!((framePtr == null))) {
		result_21470 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_21151(framePtr) || []), NTI138);
		}
		else {
			result_21470 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_21470;

}

function new_seq_23336(len_23339) {
	var result_23341 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 997;
		result_23341 = new Array(len_23339); for (var i=0;i<len_23339;++i) {result_23341[i]=null;}	framePtr = F.prev;

	return result_23341;

}

function unhandledException(e_21529) {
		var buf_21530 = [[]];
		if (!(((e_21529.message != null ? e_21529.message.length : 0) == 0))) {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(e_21529.message); } else { buf_21530[0] = e_21529.message.slice(); };
		}
		else {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit(" [")); } else { buf_21530[0] = makeNimstrLit(" ["); };
		add_18638(buf_21530, 0, e_21529.name);
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_21530[0] = makeNimstrLit("]\x0A"); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(raw_write_stack_trace_21468()); } else { buf_21530[0] = raw_write_stack_trace_21468().slice(); };
		var cbuf_21601 = toJSStr(buf_21530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_21601);
  }
  else {
    throw cbuf_21601;
  }
  

	
}

function raiseOverflow() {
		var eHEX60gensym22058_22203 = null;
		eHEX60gensym22058_22203 = ({m_type: NTI3646, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null});
		eHEX60gensym22058_22203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		eHEX60gensym22058_22203.parent = null;
		raiseException(eHEX60gensym22058_22203, "OverflowError");

	
}

function is_whitespace_161654(text_161656) {
		     return !/[^\s]/.test(text_161656);
  

	
}

function is_whitespace_161671(x_161673) {
		var Tmp1;
		var Tmp2;

	var result_161674 = false;

	var F={procname:"dochack.isWhitespace",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 134;
		if (!(x_161673.nodeName == "#text")) Tmp2 = false; else {			Tmp2 = is_whitespace_161654(x_161673.textContent);		}		if (Tmp2) Tmp1 = true; else {			Tmp1 = (x_161673.nodeName == "#comment");		}		result_161674 = Tmp1;
	framePtr = F.prev;

	return result_161674;

}

function raiseIndexError(i_22655, a_22656, b_22657) {
		var Tmp1;

		var eHEX60gensym22802_23003 = null;
		eHEX60gensym22802_23003 = ({m_type: NTI3658, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null});
		if ((b_22657 < a_22656)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_22655)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_22656)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_22657)+"") || []);
		}
		
		eHEX60gensym22802_23003.message = nimCopy(null, Tmp1, NTI138);
		eHEX60gensym22802_23003.parent = null;
		raiseException(eHEX60gensym22802_23003, "IndexError");

	
}

function to_toc_161688(x_161690, father_161691) {
								var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;
			var Tmp15;

	var F={procname:"dochack.toToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if ((x_161690.nodeName == "UL")) {
		F.line = 139;
		var f_161712 = {heading: null, kids: [], sortId: (father_161691.kids != null ? father_161691.kids.length : 0), doSort: false};
		F.line = 140;
		var i_161714 = 0;
		L1: do {
			F.line = 141;
				L2: while (true) {
				if (!(i_161714 < x_161690.childNodes.length)) break L2;
					F.line = 142;
					var nxt_161715 = addInt(i_161714, 1);
					L3: do {
						F.line = 143;
							L4: while (true) {
								if (!(nxt_161715 < x_161690.childNodes.length)) Tmp5 = false; else {									Tmp5 = is_whitespace_161671(x_161690.childNodes[nxt_161715]);								}							if (!Tmp5) break L4;
								F.line = 144;
								nxt_161715 = addInt(nxt_161715, 1);
							}
					} while(false);
						if (!(nxt_161715 < x_161690.childNodes.length)) Tmp8 = false; else {							Tmp8 = (x_161690.childNodes[i_161714].nodeName == "LI");						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (x_161690.childNodes[i_161714].childNodes.length == 1);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (x_161690.childNodes[nxt_161715].nodeName == "UL");						}					if (Tmp6) {
					F.line = 147;
					var e_161742 = {heading: x_161690.childNodes[i_161714].childNodes[0], kids: [], sortId: (f_161712.kids != null ? f_161712.kids.length : 0), doSort: false};
					F.line = 148;
					var it_161743 = x_161690.childNodes[nxt_161715];
					L9: do {
						F.line = 149;
						var j_161751 = 0;
						F.line = 2737;
						var colontmp__162442 = 0;
						F.line = 149;
						colontmp__162442 = it_161743.childNodes.length;
						F.line = 2739;
						var i_162443 = 0;
						L10: do {
							F.line = 2740;
								L11: while (true) {
								if (!(i_162443 < colontmp__162442)) break L11;
									F.line = 149;
									j_161751 = i_162443;
									F.line = 150;
									to_toc_161688(it_161743.childNodes[j_161751], e_161742);
									F.line = 2742;
									i_162443 = addInt(i_162443, 1);
								}
						} while(false);
					} while(false);
					F.line = 151;
					if (f_161712.kids != null) { f_161712.kids.push(e_161742); } else { f_161712.kids = [e_161742]; };
					F.line = 152;
					i_161714 = addInt(nxt_161715, 1);
					}
					else {
						F.line = 154;
						to_toc_161688(x_161690.childNodes[i_161714], f_161712);
						F.line = 155;
						i_161714 = addInt(i_161714, 1);
					}
					
				}
		} while(false);
		F.line = 156;
		if (father_161691.kids != null) { father_161691.kids.push(f_161712); } else { father_161691.kids = [f_161712]; };
		}
		else {
		if (is_whitespace_161671(x_161690)) {
		}
		else {
		if ((x_161690.nodeName == "LI")) {
		F.line = 160;
		var idx_161788 = [];
		L12: do {
			F.line = 161;
			var i_161796 = 0;
			F.line = 2737;
			var colontmp__162447 = 0;
			F.line = 161;
			colontmp__162447 = x_161690.childNodes.length;
			F.line = 2739;
			var i_162448 = 0;
			L13: do {
				F.line = 2740;
					L14: while (true) {
					if (!(i_162448 < colontmp__162447)) break L14;
						F.line = 161;
						i_161796 = i_162448;
						if (!(is_whitespace_161671(x_161690.childNodes[i_161796]))) {
						F.line = 162;
						if (idx_161788 != null) { idx_161788.push(i_161796); } else { idx_161788 = [i_161796]; };
						}
						
						F.line = 2742;
						i_162448 = addInt(i_162448, 1);
					}
			} while(false);
		} while(false);
			if (!((idx_161788 != null ? idx_161788.length : 0) == 2)) Tmp15 = false; else {				Tmp15 = (x_161690.childNodes[idx_161788[chckIndx(1, 0, (idx_161788 != null ? idx_161788.length : 0)+0-1)-0]].nodeName == "UL");			}		if (Tmp15) {
		F.line = 164;
		var e_161829 = {heading: x_161690.childNodes[idx_161788[chckIndx(0, 0, (idx_161788 != null ? idx_161788.length : 0)+0-1)-0]], kids: [], sortId: (father_161691.kids != null ? father_161691.kids.length : 0), doSort: false};
		F.line = 166;
		var it_161830 = x_161690.childNodes[idx_161788[chckIndx(1, 0, (idx_161788 != null ? idx_161788.length : 0)+0-1)-0]];
		L16: do {
			F.line = 167;
			var j_161838 = 0;
			F.line = 2737;
			var colontmp__162453 = 0;
			F.line = 167;
			colontmp__162453 = it_161830.childNodes.length;
			F.line = 2739;
			var i_162454 = 0;
			L17: do {
				F.line = 2740;
					L18: while (true) {
					if (!(i_162454 < colontmp__162453)) break L18;
						F.line = 167;
						j_161838 = i_162454;
						F.line = 168;
						to_toc_161688(it_161830.childNodes[j_161838], e_161829);
						F.line = 2742;
						i_162454 = addInt(i_162454, 1);
					}
			} while(false);
		} while(false);
		F.line = 169;
		if (father_161691.kids != null) { father_161691.kids.push(e_161829); } else { father_161691.kids = [e_161829]; };
		}
		else {
			L19: do {
				F.line = 171;
				var i_161853 = 0;
				F.line = 2737;
				var colontmp__162458 = 0;
				F.line = 171;
				colontmp__162458 = x_161690.childNodes.length;
				F.line = 2739;
				var i_162459 = 0;
				L20: do {
					F.line = 2740;
						L21: while (true) {
						if (!(i_162459 < colontmp__162458)) break L21;
							F.line = 171;
							i_161853 = i_162459;
							F.line = 172;
							to_toc_161688(x_161690.childNodes[i_161853], father_161691);
							F.line = 2742;
							i_162459 = addInt(i_162459, 1);
						}
				} while(false);
			} while(false);
		}
		
		}
		else {
			F.line = 174;
		if (father_161691.kids != null) { father_161691.kids.push({heading: x_161690, kids: [], sortId: (father_161691.kids != null ? father_161691.kids.length : 0), doSort: false}); } else { father_161691.kids = [{heading: x_161690, kids: [], sortId: (father_161691.kids != null ? father_161691.kids.length : 0), doSort: false}]; };
		}
		}}
	framePtr = F.prev;

	
}

function extract_items_161339(x_161341, heading_161342, items_161345, items_161345_Idx) {
			var Tmp1;

	var F={procname:"dochack.extractItems",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_161341 == null)) {
		F.line = 81;
		break BeforeRet;
		}
		
			if (!!((x_161341.heading == null))) Tmp1 = false; else {				Tmp1 = (x_161341.heading.textContent == heading_161342);			}		if (Tmp1) {
		L2: do {
			F.line = 83;
			var i_161374 = 0;
			F.line = 2737;
			var colontmp__162487 = 0;
			F.line = 83;
			colontmp__162487 = (x_161341.kids != null ? x_161341.kids.length : 0);
			F.line = 2739;
			var i_162488 = 0;
			L3: do {
				F.line = 2740;
					L4: while (true) {
					if (!(i_162488 < colontmp__162487)) break L4;
						F.line = 83;
						i_161374 = i_162488;
						F.line = 84;
						if (items_161345[items_161345_Idx] != null) { items_161345[items_161345_Idx].push(x_161341.kids[chckIndx(i_161374, 0, (x_161341.kids != null ? x_161341.kids.length : 0)+0-1)-0].heading); } else { items_161345[items_161345_Idx] = [x_161341.kids[chckIndx(i_161374, 0, (x_161341.kids != null ? x_161341.kids.length : 0)+0-1)-0].heading]; };
						F.line = 2742;
						i_162488 = addInt(i_162488, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			L5: do {
				F.line = 86;
				var i_161394 = 0;
				F.line = 2737;
				var colontmp__162492 = 0;
				F.line = 86;
				colontmp__162492 = (x_161341.kids != null ? x_161341.kids.length : 0);
				F.line = 2739;
				var i_162493 = 0;
				L6: do {
					F.line = 2740;
						L7: while (true) {
						if (!(i_162493 < colontmp__162492)) break L7;
							F.line = 86;
							i_161394 = i_162493;
							F.line = 87;
							var it_161395 = x_161341.kids[chckIndx(i_161394, 0, (x_161341.kids != null ? x_161341.kids.length : 0)+0-1)-0];
							F.line = 88;
							extract_items_161339(it_161395, heading_161342, items_161345, items_161345_Idx);
							F.line = 2742;
							i_162493 = addInt(i_162493, 1);
						}
				} while(false);
			} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function tree_161020(tag_161022, kids_161024) {
	var result_161025 = null;

	var F={procname:"dochack.tree",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 11;
		result_161025 = document.createElement(toJSStr(tag_161022));
		L1: do {
			F.line = 12;
			var k_161056 = null;
			F.line = 3;
			var i_162510 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_162510 < (kids_161024 != null ? kids_161024.length : 0))) break L3;
						F.line = 12;
						k_161056 = kids_161024[chckIndx(i_162510, 0, (kids_161024 != null ? kids_161024.length : 0)+0-1)-0];
						F.line = 13;
						result_161025.appendChild(k_161056);
						F.line = 6;
						i_162510 = addInt(i_162510, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_161025;

}

function text_161152(s_161154) {
	var result_161155 = null;

	var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_161155 = document.createTextNode(s_161154);
	framePtr = F.prev;

	return result_161155;

}

function sys_fatal_15062(message_15066) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_15203 = null;
		F.line = 37;
		e_15203 = ({m_type: NTI3650, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null});
		F.line = 38;
		e_15203.message = nimCopy(null, message_15066, NTI138);
		F.line = 39;
		raiseException(e_15203, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_15058(msg_15060) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_15062(msg_15060);
	framePtr = F.prev;

	
}

function failed_assert_impl_15266(msg_15268) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_15058(msg_15268);
	framePtr = F.prev;

	
}

function uncovered_161950(x_161952) {
			var Tmp1;
		var Tmp2;

	var result_161953 = null;

	var F={procname:"dochack.uncovered",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if (!((x_161952.kids != null ? x_161952.kids.length : 0) == 0)) Tmp1 = false; else {				Tmp1 = !((x_161952.heading == null));			}		if (Tmp1) {
		F.line = 194;
		if (!(x_161952.heading.hasOwnProperty('__karaxMarker__'))) {
		Tmp2 = x_161952;
		}
		else {
		Tmp2 = null;
		}
		
		result_161953 = Tmp2;
		break BeforeRet;
		}
		
		F.line = 195;
		result_161953 = {heading: x_161952.heading, kids: [], sortId: x_161952.sortId, doSort: x_161952.doSort};
		L3: do {
			F.line = 197;
			var i_161994 = 0;
			F.line = 2737;
			var colontmp__162522 = 0;
			F.line = 197;
			colontmp__162522 = (x_161952.kids != null ? x_161952.kids.length : 0);
			F.line = 2739;
			var i_162523 = 0;
			L4: do {
				F.line = 2740;
					L5: while (true) {
					if (!(i_162523 < colontmp__162522)) break L5;
						F.line = 197;
						i_161994 = i_162523;
						F.line = 198;
						var y_161995 = uncovered_161950(x_161952.kids[chckIndx(i_161994, 0, (x_161952.kids != null ? x_161952.kids.length : 0)+0-1)-0]);
						if (!((y_161995 == null))) {
						F.line = 199;
						if (result_161953.kids != null) { result_161953.kids.push(y_161995); } else { result_161953.kids = [y_161995]; };
						}
						
						F.line = 2742;
						i_162523 = addInt(i_162523, 1);
					}
			} while(false);
		} while(false);
		if (((result_161953.kids != null ? result_161953.kids.length : 0) == 0)) {
		F.line = 200;
		result_161953 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_161953;

}

function merge_tocs_162029(orig_162031, news_162032) {
	var result_162033 = null;

	var F={procname:"dochack.mergeTocs",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 203;
		result_162033 = uncovered_161950(orig_162031);
		if ((result_162033 == null)) {
		F.line = 205;
		result_162033 = news_162032;
		}
		else {
			L1: do {
				F.line = 207;
				var i_162054 = 0;
				F.line = 2737;
				var colontmp__162516 = 0;
				F.line = 207;
				colontmp__162516 = (news_162032.kids != null ? news_162032.kids.length : 0);
				F.line = 2739;
				var i_162517 = 0;
				L2: do {
					F.line = 2740;
						L3: while (true) {
						if (!(i_162517 < colontmp__162516)) break L3;
							F.line = 207;
							i_162054 = i_162517;
							F.line = 208;
							if (result_162033.kids != null) { result_162033.kids.push(news_162032.kids[chckIndx(i_162054, 0, (news_162032.kids != null ? news_162032.kids.length : 0)+0-1)-0]); } else { result_162033.kids = [news_162032.kids[chckIndx(i_162054, 0, (news_162032.kids != null ? news_162032.kids.length : 0)+0-1)-0]]; };
							F.line = 2742;
							i_162517 = addInt(i_162517, 1);
						}
				} while(false);
			} while(false);
		}
		
	framePtr = F.prev;

	return result_162033;

}

function build_toc_162075(orig_162077, types_162079, procs_162080) {
	var result_162081 = null;

	var F={procname:"dochack.buildToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 211;
		var new_stuff_162097 = {heading: null, kids: [], doSort: true, sortId: 0};
		L1: do {
			F.line = 212;
			var t_162214 = null;
			F.line = 184;
			var i_162505 = 0;
			F.line = 185;
			var l_162506 = (types_162079 != null ? types_162079.length : 0);
			L2: do {
				F.line = 186;
					L3: while (true) {
					if (!(i_162505 < l_162506)) break L3;
						F.line = 212;
						t_162214 = types_162079[chckIndx(i_162505, 0, (types_162079 != null ? types_162079.length : 0)+0-1)-0];
						F.line = 213;
						var c_162230 = {heading: t_162214.cloneNode(true), kids: [], doSort: true, sortId: 0};
						F.line = 214;
						t_162214.__karaxMarker__ = true;
						L4: do {
							F.line = 215;
							var p_162237 = null;
							F.line = 184;
							var i_162502 = 0;
							F.line = 185;
							var l_162503 = (procs_162080 != null ? procs_162080.length : 0);
							L5: do {
								F.line = 186;
									L6: while (true) {
									if (!(i_162502 < l_162503)) break L6;
										F.line = 215;
										p_162237 = procs_162080[chckIndx(i_162502, 0, (procs_162080 != null ? procs_162080.length : 0)+0-1)-0];
										if (!(p_162237.hasOwnProperty('__karaxMarker__'))) {
										F.line = 217;
										var xx_162238 = p_162237.parentNode.getElementsByClassName("attachedType");
										if ((((xx_162238 != null ? xx_162238.length : 0) == 1) && (xx_162238[chckIndx(0, 0, (xx_162238 != null ? xx_162238.length : 0)+0-1)-0].textContent == t_162214.textContent))) {
										F.line = 220;
										var q_162246 = tree_161020(makeNimstrLit("A"), [text_161152(p_162237.title)]);
										F.line = 221;
										q_162246.setAttribute("href", p_162237.getAttribute("href"));
										F.line = 222;
										if (c_162230.kids != null) { c_162230.kids.push({heading: q_162246, kids: [], sortId: 0, doSort: false}); } else { c_162230.kids = [{heading: q_162246, kids: [], sortId: 0, doSort: false}]; };
										F.line = 223;
										p_162237.__karaxMarker__ = true;
										}
										
										}
										
										F.line = 188;
										i_162502 = addInt(i_162502, 1);
										if (!(((procs_162080 != null ? procs_162080.length : 0) == l_162503))) {
										F.line = 189;
										failed_assert_impl_15266(makeNimstrLit("/home/runner/work/nightlies/nightlies/nim-1.0.9/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 224;
						if (new_stuff_162097.kids != null) { new_stuff_162097.kids.push(c_162230); } else { new_stuff_162097.kids = [c_162230]; };
						F.line = 188;
						i_162505 = addInt(i_162505, 1);
						if (!(((types_162079 != null ? types_162079.length : 0) == l_162506))) {
						F.line = 189;
						failed_assert_impl_15266(makeNimstrLit("/home/runner/work/nightlies/nightlies/nim-1.0.9/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 225;
		result_162081 = merge_tocs_162029(orig_162077, new_stuff_162097);
	framePtr = F.prev;

	return result_162081;

}

function add_161085(parent_161087, kid_161088) {
			var Tmp1;
				var Tmp2;

	var F={procname:"dochack.add",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
			if (!(parent_161087.nodeName == "TR")) Tmp1 = false; else {				if ((kid_161088.nodeName == "TD")) Tmp2 = true; else {					Tmp2 = (kid_161088.nodeName == "TH");				}				Tmp1 = Tmp2;			}		if (Tmp1) {
		F.line = 18;
		var k_161089 = document.createElement("TD");
		F.line = 19;
		k_161089.appendChild(kid_161088);
		F.line = 20;
		parent_161087.appendChild(k_161089);
		}
		else {
			F.line = 22;
		parent_161087.appendChild(kid_161088);
		}
		
	framePtr = F.prev;

	
}

function set_class_161103(e_161105, value_161106) {
	var F={procname:"dochack.setClass",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 25;
		e_161105.setAttribute("class", toJSStr(value_161106));
	framePtr = F.prev;

	
}

function to_html_161424(x_161426, is_root_161427) {
			var Tmp1;

		function HEX3Aanonymous_161467(a_161469, b_161470) {
					var Tmp1;

			var result_161471 = 0;

			var F={procname:"toHtml.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
			BeforeRet: do {
					if (!!((a_161469.heading == null))) Tmp1 = false; else {						Tmp1 = !((b_161470.heading == null));					}				if (Tmp1) {
				F.line = 106;
				var x_161488 = a_161469.heading.textContent;
				F.line = 107;
				var y_161489 = b_161470.heading.textContent;
				if ((x_161488 < y_161489)) {
				F.line = 108;
				result_161471 = -1;
				break BeforeRet;
				}
				
				if ((y_161489 < x_161488)) {
				F.line = 109;
				result_161471 = 1;
				break BeforeRet;
				}
				
				F.line = 110;
				result_161471 = 0;
				break BeforeRet;
				}
				else {
					F.line = 113;
					result_161471 = subInt(a_161469.sortId, b_161470.sortId);
					break BeforeRet;
				}
				
			} while (false);
			framePtr = F.prev;

			return result_161471;

		}

	var result_161428 = null;

	var F={procname:"dochack.toHtml",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_161426 == null)) {
		F.line = 91;
		result_161428 = null;
		break BeforeRet;
		}
		
		if (((x_161426.kids != null ? x_161426.kids.length : 0) == 0)) {
		if ((x_161426.heading == null)) {
		F.line = 93;
		result_161428 = null;
		break BeforeRet;
		}
		
		F.line = 94;
		result_161428 = x_161426.heading.cloneNode(true);
		break BeforeRet;
		}
		
		F.line = 95;
		result_161428 = tree_161020(makeNimstrLit("DIV"), []);
			if (!!((x_161426.heading == null))) Tmp1 = false; else {				Tmp1 = !(x_161426.heading.hasOwnProperty('__karaxMarker__'));			}		if (Tmp1) {
		F.line = 97;
		add_161085(result_161428, x_161426.heading.cloneNode(true));
		}
		
		F.line = 98;
		var ul_161464 = tree_161020(makeNimstrLit("UL"), []);
		if (is_root_161427) {
		F.line = 100;
		set_class_161103(ul_161464, makeNimstrLit("simple simple-toc"));
		}
		else {
			F.line = 102;
		set_class_161103(ul_161464, makeNimstrLit("simple"));
		}
		
		if (x_161426.doSort) {
		F.line = 104;
		x_161426.kids.sort(HEX3Aanonymous_161467);
		}
		
		L2: do {
			F.line = 115;
			var k_161614 = null;
			F.line = 184;
			var i_162530 = 0;
			F.line = 185;
			var l_162531 = (x_161426.kids != null ? x_161426.kids.length : 0);
			L3: do {
				F.line = 186;
					L4: while (true) {
					if (!(i_162530 < l_162531)) break L4;
						F.line = 115;
						k_161614 = x_161426.kids[chckIndx(i_162530, 0, (x_161426.kids != null ? x_161426.kids.length : 0)+0-1)-0];
						F.line = 116;
						var y_161615 = to_html_161424(k_161614, false);
						if (!((y_161615 == null))) {
						F.line = 118;
						add_161085(ul_161464, tree_161020(makeNimstrLit("LI"), [y_161615]));
						}
						
						F.line = 188;
						i_162530 = addInt(i_162530, 1);
						if (!(((x_161426.kids != null ? x_161426.kids.length : 0) == l_162531))) {
						F.line = 189;
						failed_assert_impl_15266(makeNimstrLit("/home/runner/work/nightlies/nightlies/nim-1.0.9/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (!((ul_161464.childNodes.length == 0))) {
		F.line = 119;
		add_161085(result_161428, ul_161464);
		}
		
		if ((result_161428.childNodes.length == 0)) {
		F.line = 120;
		result_161428 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_161428;

}

function replace_by_id_161172(id_161174, new_tree_161175) {
	var F={procname:"dochack.replaceById",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 32;
		var x_161176 = document.getElementById(id_161174);
		F.line = 33;
		x_161176.parentNode.replaceChild(new_tree_161175, x_161176);
		F.line = 34;
		new_tree_161175.id = id_161174;
	framePtr = F.prev;

	
}

function togglevis_162333(d_162335) {
	var F={procname:"dochack.togglevis",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 230;
		    if (d_162335.style.display == 'none')
      d_162335.style.display = 'inline';
    else
      d_162335.style.display = 'none';
  
	framePtr = F.prev;

	
}

function groupBy(value_162351) {
	var F={procname:"dochack.groupBy",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 238;
		var toc_162352 = document.getElementById("toc-list");
		if ((alternative_162319[0] == null)) {
		F.line = 240;
		var tt_162373 = {heading: null, kids: [], sortId: 0, doSort: false};
		F.line = 241;
		to_toc_161688(toc_162352, tt_162373);
		F.line = 242;
		tt_162373 = tt_162373.kids[chckIndx(0, 0, (tt_162373.kids != null ? tt_162373.kids.length : 0)+0-1)-0];
		F.line = 244;
		var types_162390 = [[]];
		F.line = 245;
		var procs_162407 = [[]];
		F.line = 247;
		extract_items_161339(tt_162373, "Types", types_162390, 0);
		F.line = 248;
		extract_items_161339(tt_162373, "Procs", procs_162407, 0);
		F.line = 249;
		extract_items_161339(tt_162373, "Converters", procs_162407, 0);
		F.line = 250;
		extract_items_161339(tt_162373, "Methods", procs_162407, 0);
		F.line = 251;
		extract_items_161339(tt_162373, "Templates", procs_162407, 0);
		F.line = 252;
		extract_items_161339(tt_162373, "Macros", procs_162407, 0);
		F.line = 253;
		extract_items_161339(tt_162373, "Iterators", procs_162407, 0);
		F.line = 255;
		var ntoc_162415 = build_toc_162075(tt_162373, types_162390[0], procs_162407[0]);
		F.line = 256;
		var x_162416 = to_html_161424(ntoc_162415, true);
		F.line = 257;
		alternative_162319[0] = tree_161020(makeNimstrLit("DIV"), [x_162416]);
		}
		
		if ((value_162351 == "type")) {
		F.line = 259;
		replace_by_id_161172("tocRoot", alternative_162319[0]);
		}
		else {
			F.line = 261;
		replace_by_id_161172("tocRoot", tree_161020(makeNimstrLit("DIV"), []));
		}
		
		F.line = 262;
		togglevis_162333(document.getElementById("toc-list"));
	framePtr = F.prev;

	
}
var db_162534 = [null];
var contents_162536 = [null];
var oldtoc_162961 = [null];
var timer_162962 = [null];

function raiseRangeError() {
		var eHEX60gensym22457_22603 = null;
		eHEX60gensym22457_22603 = ({m_type: NTI3662, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null});
		eHEX60gensym22457_22603.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		eHEX60gensym22457_22603.parent = null;
		raiseException(eHEX60gensym22457_22603, "RangeError");

	
}

function nsuToLowerAsciiChar(c_149380) {
	var result_149381 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet2[c_149380] != undefined)) {
		F.line = 222;
		result_149381 = chckRange(addInt(c_149380, 32), 0, 255);
		}
		else {
			F.line = 224;
			result_149381 = c_149380;
		}
		
	framePtr = F.prev;

	return result_149381;

}

function fuzzy_match_160070(pattern_160072, str_160073) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_160077 = {Field0: 0, Field1: false};

	var F={procname:"fuzzysearch.fuzzyMatch",prev:framePtr,filename:"fuzzysearch.nim",line:0};
	framePtr = F;
		F.line = 37;
		var score_state_160078 = -100;
		F.line = 38;
		var header_matched_160079 = false;
		F.line = 39;
		var unmatched_leading_char_count_160081 = 0;
		F.line = 40;
		var consecutive_match_count_160083 = 0;
		F.line = 41;
		var str_index_160085 = 0;
		F.line = 42;
		var pat_index_160087 = 0;
		F.line = 43;
		var score_160089 = 0;
		L1: do {
			F.line = 49;
				L2: while (true) {
				if (!((str_index_160085 < (str_160073 != null ? str_160073.length : 0)) && (pat_index_160087 < (pattern_160072 != null ? pattern_160072.length : 0)))) break L2;
					L3: do {
						F.line = 51;
						var pattern_char_160095 = nsuToLowerAsciiChar(pattern_160072.charCodeAt(chckIndx(pat_index_160087, 0, (pattern_160072 != null ? pattern_160072.length : 0)+0-1)-0));
						F.line = 52;
						var str_char_160096 = nsuToLowerAsciiChar(str_160073.charCodeAt(chckIndx(str_index_160085, 0, (str_160073 != null ? str_160073.length : 0)+0-1)-0));
						if ((ConstSet3[pattern_char_160095] != undefined)) {
						F.line = 56;
						pat_index_160087 = addInt(pat_index_160087, 1);
						F.line = 57;
						break L3;
						}
						
						if ((ConstSet4[str_char_160096] != undefined)) {
						F.line = 59;
						str_index_160085 = addInt(str_index_160085, 1);
						F.line = 60;
						break L3;
						}
						
						if ((!(header_matched_160079) && (str_char_160096 == 58))) {
						F.line = 65;
						header_matched_160079 = true;
						F.line = 66;
						score_state_160078 = -100;
						F.line = 67;
						score_160089 = ((Math.floor((5.0000000000000000e-01 * score_160089)))|0);
						F.line = 68;
						pat_index_160087 = 0;
						F.line = 69;
						str_index_160085 = addInt(str_index_160085, 1);
						F.line = 70;
						break L3;
						}
						
						if ((str_char_160096 == pattern_char_160095)) {
						F.line = 73;
						switch (score_state_160078) {
						case -100:
						case 20:
							F.line = 75;
							score_state_160078 = 10;
							break;
						case 0:
							F.line = 78;
							score_state_160078 = 5;
							F.line = 78;
							score_160089 = addInt(score_160089, score_state_160078);
							break;
						case 10:
						case 5:
							F.line = 81;
							consecutive_match_count_160083 = addInt(consecutive_match_count_160083, 1);
							F.line = 82;
							score_state_160078 = 5;
							F.line = 83;
							score_160089 = addInt(score_160089, mulInt(5, consecutive_match_count_160083));
							if ((score_state_160078 == 10)) {
							F.line = 86;
							score_160089 = addInt(score_160089, 10);
							}
							
							F.line = 88;
							var on_boundary_160171 = (pat_index_160087 == (pattern_160072 != null ? (pattern_160072.length-1) : -1));
							if ((!(on_boundary_160171) && (str_index_160085 < (str_160073 != null ? (str_160073.length-1) : -1)))) {
							F.line = 91;
							var next_pattern_char_160172 = nsuToLowerAsciiChar(pattern_160072.charCodeAt(chckIndx(addInt(pat_index_160087, 1), 0, (pattern_160072 != null ? pattern_160072.length : 0)+0-1)-0));
							F.line = 92;
							var next_str_char_160173 = nsuToLowerAsciiChar(str_160073.charCodeAt(chckIndx(addInt(str_index_160085, 1), 0, (str_160073 != null ? str_160073.length : 0)+0-1)-0));
							F.line = 95;
							if (!!((ConstSet5[next_str_char_160173] != undefined))) Tmp4 = false; else {								Tmp4 = !((next_str_char_160173 == next_pattern_char_160172));							}							on_boundary_160171 = Tmp4;
							}
							
							if (on_boundary_160171) {
							F.line = 100;
							score_state_160078 = 20;
							F.line = 100;
							score_160089 = addInt(score_160089, score_state_160078);
							}
							
							break;
						case -1:
						case -3:
							F.line = 103;
							if (!((ConstSet6[str_160073.charCodeAt(chckIndx(subInt(str_index_160085, 1), 0, (str_160073 != null ? str_160073.length : 0)+0-1)-0)] != undefined))) Tmp5 = true; else {								if (!(ConstSet7[str_160073.charCodeAt(chckIndx(subInt(str_index_160085, 1), 0, (str_160073 != null ? str_160073.length : 0)+0-1)-0)] != undefined)) Tmp6 = false; else {									Tmp6 = (ConstSet8[str_160073.charCodeAt(chckIndx(str_index_160085, 0, (str_160073 != null ? str_160073.length : 0)+0-1)-0)] != undefined);								}								Tmp5 = Tmp6;							}							var is_leading_char_160211 = Tmp5;
							if (is_leading_char_160211) {
							F.line = 110;
							score_state_160078 = 10;
							}
							else {
								F.line = 114;
								score_state_160078 = 0;
								F.line = 114;
								score_160089 = addInt(score_160089, score_state_160078);
							}
							
							break;
						}
						F.line = 115;
						pat_index_160087 = addInt(pat_index_160087, 1);
						}
						else {
							F.line = 118;
							switch (score_state_160078) {
							case -100:
								F.line = 120;
								score_state_160078 = -3;
								F.line = 120;
								score_160089 = addInt(score_160089, score_state_160078);
								break;
							case 5:
								F.line = 123;
								score_state_160078 = -1;
								F.line = 123;
								score_160089 = addInt(score_160089, score_state_160078);
								F.line = 124;
								consecutive_match_count_160083 = 0;
								break;
							case -3:
								if ((unmatched_leading_char_count_160081 < 3)) {
								F.line = 128;
								score_state_160078 = -3;
								F.line = 128;
								score_160089 = addInt(score_160089, score_state_160078);
								}
								
								F.line = 129;
								unmatched_leading_char_count_160081 = addInt(unmatched_leading_char_count_160081, 1);
								break;
							default: 
								F.line = 132;
								score_state_160078 = -1;
								F.line = 132;
								score_160089 = addInt(score_160089, score_state_160078);
								break;
							}
						}
						
						F.line = 134;
						str_index_160085 = addInt(str_index_160085, 1);
					} while(false);
				}
		} while(false);
		F.line = 137;
		var colontmp__163067 = nimMax(0, score_160089);
		F.line = 138;
		var colontmp__163068 = (0 < score_160089);
		F.line = 136;
		nimCopy(result_160077, {Field0: colontmp__163067, Field1: colontmp__163068}, NTI160074);
	framePtr = F.prev;

	return result_160077;

}

function text_161120(s_161122) {
	var result_161123 = null;

	var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 26;
		result_161123 = document.createTextNode(toJSStr(s_161122));
	framePtr = F.prev;

	return result_161123;

}

function dosearch_162553(value_162555) {

		function HEX3Aanonymous_162873(a_162882, b_162883) {
			var result_162887 = 0;

			var F={procname:"dosearch.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 305;
				result_162887 = subInt(b_162883["Field1"], a_162882["Field1"]);
			framePtr = F.prev;

			return result_162887;

		}

	var result_162556 = null;

	var F={procname:"dochack.dosearch",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (((db_162534[0] != null ? db_162534[0].length : 0) == 0)) {
		F.line = 272;
		var stuff_162562 = null;
		F.line = 273;
		    var request = new XMLHttpRequest();
    request.open("GET", "theindex.html", false);
    request.send(null);

    var doc = document.implementation.createHTMLDocument("theindex");
    doc.documentElement.innerHTML = request.responseText;

    //parser=new DOMParser();
    //doc=parser.parseFromString("<html></html>", "text/html");

    stuff_162562 = doc.documentElement;
    
		F.line = 286;
		db_162534[0] = nimCopy(null, stuff_162562.getElementsByClassName("reference"), NTI45305);
		F.line = 287;
		contents_162536[0] = nimCopy(null, [], NTI162577);
		L1: do {
			F.line = 288;
			var ahref_162814 = null;
			F.line = 184;
			var i_163045 = 0;
			F.line = 185;
			var l_163046 = (db_162534[0] != null ? db_162534[0].length : 0);
			L2: do {
				F.line = 186;
					L3: while (true) {
					if (!(i_163045 < l_163046)) break L3;
						F.line = 288;
						ahref_162814 = db_162534[0][chckIndx(i_163045, 0, (db_162534[0] != null ? db_162534[0].length : 0)+0-1)-0];
						F.line = 289;
						if (contents_162536[0] != null) { contents_162536[0].push(ahref_162814.getAttribute("data-doc-search-tag")); } else { contents_162536[0] = [ahref_162814.getAttribute("data-doc-search-tag")]; };
						F.line = 188;
						i_163045 = addInt(i_163045, 1);
						if (!(((db_162534[0] != null ? db_162534[0].length : 0) == l_163046))) {
						F.line = 189;
						failed_assert_impl_15266(makeNimstrLit("/home/runner/work/nightlies/nightlies/nim-1.0.9/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		}
		
		F.line = 290;
		var ul_162825 = tree_161020(makeNimstrLit("UL"), []);
		F.line = 291;
		result_162556 = tree_161020(makeNimstrLit("DIV"), []);
		F.line = 292;
		set_class_161103(result_162556, makeNimstrLit("search_results"));
		F.line = 293;
		var matches_162846 = [];
		L4: do {
			F.line = 294;
			var i_162859 = 0;
			F.line = 2737;
			var colontmp__163052 = 0;
			F.line = 294;
			colontmp__163052 = (db_162534[0] != null ? db_162534[0].length : 0);
			F.line = 2739;
			var i_163053 = 0;
			L5: do {
				F.line = 2740;
					L6: while (true) {
					if (!(i_163053 < colontmp__163052)) break L6;
						F.line = 294;
						i_162859 = i_163053;
						L7: do {
							F.line = 295;
							var c_162860 = contents_162536[0][chckIndx(i_162859, 0, (contents_162536[0] != null ? contents_162536[0].length : 0)+0-1)-0];
							if (((c_162860 == "Examples") || (c_162860 == "PEG construction"))) {
							F.line = 300;
							break L7;
							}
							
							F.line = 301;
							var colontmp__163062 = {Field0: 0, Field1: false};
							F.line = 301;
							var score_162861 = 0;
							F.line = 301;
							var matched_162862 = false;
							F.line = 301;
							nimCopy(colontmp__163062, fuzzy_match_160070(value_162555, c_162860), NTI160074);
							F.line = 301;
							score_162861 = colontmp__163062["Field0"];
							F.line = 301;
							matched_162862 = colontmp__163062["Field1"];
							if (matched_162862) {
							F.line = 303;
							if (matches_162846 != null) { matches_162846.push({Field0: db_162534[0][chckIndx(i_162859, 0, (db_162534[0] != null ? db_162534[0].length : 0)+0-1)-0], Field1: score_162861}); } else { matches_162846 = [{Field0: db_162534[0][chckIndx(i_162859, 0, (db_162534[0] != null ? db_162534[0].length : 0)+0-1)-0], Field1: score_162861}]; };
							}
							
						} while(false);
						F.line = 2742;
						i_163053 = addInt(i_163053, 1);
					}
			} while(false);
		} while(false);
		F.line = 305;
		matches_162846.sort(HEX3Aanonymous_162873);
		L8: do {
			F.line = 306;
			var i_162926 = 0;
			F.line = 2737;
			var colontmp__163058 = 0;
			F.line = 306;
			colontmp__163058 = nimMin((matches_162846 != null ? matches_162846.length : 0), 19);
			F.line = 2739;
			var i_163059 = 0;
			L9: do {
				F.line = 2740;
					L10: while (true) {
					if (!(i_163059 < colontmp__163058)) break L10;
						F.line = 306;
						i_162926 = i_163059;
						F.line = 307;
						matches_162846[chckIndx(i_162926, 0, (matches_162846 != null ? matches_162846.length : 0)+0-1)-0]["Field0"].innerHTML = matches_162846[chckIndx(i_162926, 0, (matches_162846 != null ? matches_162846.length : 0)+0-1)-0]["Field0"].getAttribute("data-doc-search-tag");
						F.line = 308;
						add_161085(ul_162825, tree_161020(makeNimstrLit("LI"), [matches_162846[chckIndx(i_162926, 0, (matches_162846 != null ? matches_162846.length : 0)+0-1)-0]["Field0"]]));
						F.line = 2742;
						i_163059 = addInt(i_163059, 1);
					}
			} while(false);
		} while(false);
		if ((ul_162825.childNodes.length == 0)) {
		F.line = 310;
		add_161085(result_162556, tree_161020(makeNimstrLit("B"), [text_161120(makeNimstrLit("no search results"))]));
		}
		else {
			F.line = 312;
			add_161085(result_162556, tree_161020(makeNimstrLit("B"), [text_161120(makeNimstrLit("search results"))]));
			F.line = 313;
			add_161085(result_162556, ul_162825);
		}
		
	framePtr = F.prev;

	return result_162556;

}

function search() {

		function wrapper_162993() {
			var F={procname:"search.wrapper",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 320;
				var elem_162995 = document.getElementById("searchInput");
				F.line = 321;
				var value_162996 = elem_162995.value;
				if (!(((value_162996 != null ? value_162996.length : 0) == 0))) {
				if ((oldtoc_162961[0] == null)) {
				F.line = 324;
				oldtoc_162961[0] = document.getElementById("tocRoot");
				}
				
				F.line = 325;
				var results_163002 = dosearch_162553(value_162996);
				F.line = 326;
				replace_by_id_161172("tocRoot", results_163002);
				}
				else {
				if (!((oldtoc_162961[0] == null))) {
				F.line = 328;
				replace_by_id_161172("tocRoot", oldtoc_162961[0]);
				}
				}
			framePtr = F.prev;

			
		}

	var F={procname:"dochack.search",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (!((timer_162962[0] == null))) {
		F.line = 330;
		clearTimeout(timer_162962[0]);
		}
		
		F.line = 331;
		timer_162962[0] = setTimeout(wrapper_162993, 400);
	framePtr = F.prev;

	
}
